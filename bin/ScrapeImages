#!/usr/bin/perl
#
########################################################################################################################
########################################################################################################################
##
##      Copyright (C) 2020 Peter Walsh, Milford, NH 03055
##      All Rights Reserved under the MIT license as outlined below.
##
##  FILE
##      ScrapeImages.pl
##
##  DESCRIPTION
##
##      Scrape project images from free-images.com
##
##      Take a project descriptors (ex: "pottery") and grab 200 free images from 
##        free-images.com. The images will need to be vetted by a human for applicability,
##        use the supplied program "CullImages" for that.
##
##  USAGE
##
##      ScrapeImages <keyword1> [<keyword2> ...]
##
##      <keyword>           Some keyword to use as the search term (ex: "pottery")
##
##  EXAMPLE
##
##      ScrapeImages pottery ceramics clay
##
##      This will retrieve 200 images "pottery", 200 images "ceramics", and 200 images "clay"
##        from the free-images.com website. Duplicates will be downloaded only once.
##
########################################################################################################################
########################################################################################################################
##
##  MIT LICENSE
##
##  Permission is hereby granted, free of charge, to any person obtaining a copy of
##    this software and associated documentation files (the "Software"), to deal in
##    the Software without restriction, including without limitation the rights to
##    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
##    of the Software, and to permit persons to whom the Software is furnished to do
##    so, subject to the following conditions:
##
##  The above copyright notice and this permission notice shall be included in
##    all copies or substantial portions of the Software.
##
##  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
##    INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
##    PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
##    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
##    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
##    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##
########################################################################################################################
########################################################################################################################

use strict;
use warnings;
use Carp;

use URI;
use LWP::Simple;
use HTML::TreeBuilder;

use File::Basename;

########################################################################################################################
########################################################################################################################
##
## Data declarations
##
########################################################################################################################
########################################################################################################################

my @SearchTerms = @ARGV;    # All search terms

my $ImageCount = 0;

my %ImageNames;             # List of images already downloaded

#
# This should result in 100 images.
#
# To get the next page, add "&skip=100" and reload.
#
my $TopURL = "https://free-images.com/search/?q=SEARCH_TERM&cat=st";

########################################################################################################################
########################################################################################################################
##
## ScrapeImages
##
########################################################################################################################
########################################################################################################################

die "No search terms found."
    unless scalar @SearchTerms;

#
# Note the existing images in the directory, so we don't have to download what we already have
#
$ImageNames{$_} = 1
    foreach glob "*.jpg *.jpeg *.png *.gif *.bmp";

ScrapeTerm($_)
    foreach @SearchTerms;

print "Done. $ImageCount images saved in current directory\n";

exit(0);


########################################################################################################################
########################################################################################################################
#
# ScrapeTerm - Grab 200 images for a specified search term
#
# Inputs:   Search term to check.
#
# Outputs:  None.
#
sub ScrapeTerm {
    my $Term = lc shift;

    print "Term: $Term\n";

    my $URL = $TopURL;
    $URL =~ s/SEARCH_TERM/$Term/;

    ScrapeURL($URL);
#    ScrapeURL($URL . "&skip=100");
    }


########################################################################################################################
########################################################################################################################
#
# ScrapeURL - Grab all images for a specified URL
#
# Inputs:   URL of top-level in free-images.com
#
# Outputs:  None.
#
sub ScrapeURL {
    my $URL = lc shift;

    print "    WebPage: $URL\n";

    my $Page = get($URL);

    die "could not get $URL\n"
        unless defined $Page;

    ########################################################################################################################
    #
    # Find all the free DIV descriptors, and process.
    #
    my $Tree = HTML::TreeBuilder->new->parse($Page);

    my @ImageDivs = $Tree->look_down('_tag', 'div', 'class', 'imdiv');

    ScrapeImage($_,$URL)
        foreach @ImageDivs;
    }


########################################################################################################################
########################################################################################################################
#
# ScrapeImage - Scrape single image from website
#
# Inputs:   DIV containing image link
#           Original URL of page (for sitename)
#
# Outputs:  None.
#
sub ScrapeImage {
    my $Image = shift;
    my $URL   = shift;

    #
    # https://free-images.com/lg/3fcd/writing_write_fountain_pen.jpg
    #
    my $ImgTag = $Image->look_down('_tag', 'img');

    die "could not get IMG tag for $Image\n"
        unless defined $ImgTag;

    #
    # Grab the link and convert from relative to absolute
    #
    # URL fields: "tn" tiny,
    #             "sm" small,
    #             "md" medium,
    #             "lg" large,
    #             "or" original (very large)
    #
    my $ImgURL = $ImgTag->attr('src');

    #
    # If an image with that name already exists, skip the download. (Arises
    #   when searching on multiple, related terms.
    #
    if( defined $ImageNames{basename $ImgURL} ) {
        print "        Skip: $ImgURL (exists)\n";
        return;        
        }

    $ImageNames{basename $ImgURL} = 1;

    $ImgURL =~ s#/sm/#/lg/#;

    $ImgURL = URI->new_abs($ImgURL,$URL);

    print "        Get : $ImgURL\n";

    my $Success = qx{wget --quiet $ImgURL};

    $ImageCount++;
    }
