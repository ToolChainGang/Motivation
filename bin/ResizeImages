#!/usr/bin/perl
#
########################################################################################################################
########################################################################################################################
##
##      Copyright (C) 2020 Peter Walsh, Milford, NH 03055
##      All Rights Reserved under the MIT license as outlined below.
##
##  FILE
##      ResizeImages
##
##  DESCRIPTION
##
##      Shrink images as needed to fit within the 1024x768 limit
##
##      The scraped images are sometimes very large. Shrink them down (using the original aspect ratio)
##        until they fit within a 1024x768 display.
##
##  USAGE
##
##      ShrinkImages
##
##  EXAMPLE
##
##      ShrinkImages
##
##      This will shrink all images in the current directory.
##
########################################################################################################################
########################################################################################################################
##
##  MIT LICENSE
##
##  Permission is hereby granted, free of charge, to any person obtaining a copy of
##    this software and associated documentation files (the "Software"), to deal in
##    the Software without restriction, including without limitation the rights to
##    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
##    of the Software, and to permit persons to whom the Software is furnished to do
##    so, subject to the following conditions:
##
##  The above copyright notice and this permission notice shall be included in
##    all copies or substantial portions of the Software.
##
##  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
##    INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
##    PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
##    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
##    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
##    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##
########################################################################################################################
########################################################################################################################

use strict;
use warnings;
use Carp;

use Image::Magick;

########################################################################################################################
########################################################################################################################
##
## Data declarations
##
########################################################################################################################
########################################################################################################################

my $MaxWidth  = 1024;   # Max width of image
my $MaxHeight = 768;    # Max height of image

my @Images = <*.jpg *.jpeg *.gif>;

my $Image = Image::Magick->new;

########################################################################################################################
########################################################################################################################
##
## ResizeImages
##
########################################################################################################################
########################################################################################################################

ShrinkImage($_)
    foreach @Images;

print "Done!\n";
print "\n";

exit(0);

########################################################################################################################
########################################################################################################################
#
# ShrinkImage - Grab an image, check the size, possibly shrink, and save
#
# Inputs:   FIlename of image to check
#
# Outputs:  None. 
#
sub ShrinkImage {
    my $ImageFile = shift;

    @$Image = ();       # Clear out previous image data

    my $Error = $Image->Read($ImageFile);
    my ($OrigWidth, $OrigHeight) = $Image->Get('width', 'height');

#print "Width: $OrigWidth, Height: $OrigHeight\n";

    my $NewWidth  = $OrigWidth;
    my $NewHeight = $OrigHeight;

    my $NeedResize = 0;

    if( $OrigWidth > $MaxWidth ) {
        $NewHeight *= $MaxWidth/$OrigWidth;
        $NewWidth   = $MaxWidth;
        $NeedResize = 1;
        }
    elsif( $OrigHeight > $MaxHeight ) {
        $NewWidth  *= $MaxHeight/$OrigHeight;
        $NewHeight  = $MaxHeight;
        $NeedResize = 1;
        }

    return
        unless $NeedResize;

    $NewHeight = int ($NewHeight+0.9);
    $NewWidth  = int ($NewWidth+0.9);

    print "Resizing ${NewWidth}x${NewHeight} $ImageFile\n";
    $Image->Scale(geometry => "${NewWidth}x${NewHeight}");

    unlink $ImageFile;
    $Error = $Image->Write($ImageFile);
    }
